import React, { useEffect, useRef } from "react";
import { Link, RouteComponentProps } from "@reach/router";
import { Disclosure } from "@headlessui/react";

import Nav from "../components/Nav";
import CyborgEyeShadow from "../assets/faq/cyborg-eye-shadow.png";
import useScrollToTop from "../lib/useScrollToTop";

function FAQ(props: RouteComponentProps) {
  const faqs = [
    {
      question: "What is SGF United?",
      answer:
        "SGF United is building the first community-owned sci-fi media house on Solana. We want to build a media empire that rivals Star Wars! Our first intellectual property (IP) drop is going to be 10k Cyborg Suits NFTs",
    },
    {
      question: "What are SGF Cyborgs?",
      answer:
        "SGF Cyborgs are our first intellectual property (IP) drop. It is going to be algorithmically generated 10,000 NFT Cyborg Suits.",
    },
    {
      question: "How many Cyborgs will be available to purchase?",
      answer: "10,000",
    },
    {
      question: "How much will it be to mint 1 Cyborg?",
      answer: "0.99 SOL",
    },
    {
      question: "Where will I be able to mint Cyborgs?",
      answer: "TBD",
    },
    {
      question: "What wallets do you support?",
      answer: "Phantom (recommended), Sollet & Solflare.",
    },
    {
      question: "Why should I mint your NFT?",
      answer:
        "SGF NFT's utility is jam-packed with financial and karma upside. You basically stake your Gen 1 Cyborg to earn staking rewards generated by the entire media house. Please read more about it on our Tokenomics page.",
    },
    {
      question: "Is there a rarity based attribute system?",
      answer: "Yes, please read more about it on our Gen-1 NFT page.",
    },
    {
      question: "Will there be a Marketplace?",
      answer: "Yes, the marketplace will be decided super soon.",
    },
    {
      question: "Do you have a long-term roadmap?",
      answer: "Yes, please read more about it on our Roadmap page.",
    },
    {
      question: "How do you ensure a successful launch?",
      answer:
        "We are using the Metaplex team's Candy Machine for a fair launch. We have also partnered with GenesysGo for our RPC's to power our launch.",
    },
    {
      question: "Do I receive my NFT as soon as I mint it?",
      answer: "Yes",
    },
    {
      question: "I won a Giveaway Cyborg NFT, when will I get it?",
      answer: "Post-launch",
    },
    {
      question: "I purchased a Cyborg NFT in Presale, when will I get it?",
      answer: "Post-launch",
    },
  ];

  const headingRef = useRef<HTMLHeadingElement>(null);

  useEffect(() => {
    headingRef.current?.classList.remove("opacity-0");
  }, []);

  useScrollToTop();

  return (
    <div style={{ background: "#101010" }} className="min-h-screen">
      <Nav />
      <main className="py-36">
        <h1
          className="text-center text-primary-light glow text-5xl font-black italic transition-all opacity-0 duration-700"
          ref={headingRef}
        >
          FAQS
        </h1>
        <section className="relative mt-10 lg:-mt-10  lg:px-52 px-10">
          <img
            src={CyborgEyeShadow}
            alt="Cyborg sillouhette with glow eyes"
            className="mt-2 ml-10 hidden lg:block"
          />
          <dl className="space-y-5">
            {faqs.map((faq) => (
              <Disclosure
                as="div"
                key={faq.question}
                className="border border-gray-light bg-gray-dark rounded-md p-5"
              >
                {({ open }) => (
                  <>
                    <dt className="text-lg">
                      <Disclosure.Button className="text-left w-full flex justify-between items-start text-gray-dark focus:outline-none">
                        <span className="font-black italic uppercase text-white text-xl">
                          {faq.question}
                        </span>
                        <span className="ml-6 h-7 flex items-center text-white">
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            className={`${open ? "-rotate-180" : "rotate-0"}
                              h-6 w-6 transform transition-all duration-200`}
                            viewBox="0 0 20 20"
                            fill="currentColor"
                          >
                            <path
                              fillRule="evenodd"
                              d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                              clipRule="evenodd"
                            />
                          </svg>
                        </span>
                      </Disclosure.Button>
                    </dt>
                    <Disclosure.Panel as="dd" className="mt-2 pr-12">
                      <p className="text-base text-gray">{faq.answer}</p>
                    </Disclosure.Panel>
                  </>
                )}
              </Disclosure>
            ))}
          </dl>
        </section>
        <div className="mt-16 font-orb">
          <p className="text-sm font-medium text-gray text-center font-inter mx-10">
            Can’t find an answer to your query? Don’t worry, we’ve got your
            back...
          </p>
          <div className="flex flex-wrap justify-center items-center">
            <Link
              to="/roadmap"
              className="btn-primary font-black mt-4 lg:mr-3 uppercase"
            >
              Roadmap
            </Link>
            <a
              href="https://discord.com/invite/bBeHKHHSu5"
              target="_blank"
              rel="noreferrer"
              className="btn-secondary font-black mt-4"
            >
              JOIN DISCORD
            </a>
          </div>
        </div>
      </main>
    </div>
  );
}

export default FAQ;
